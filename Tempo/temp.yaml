apiVersion: tempo.grafana.com/v1alpha1
kind:  TempoStack
metadata:
  name: simplest
  namespace: perf-tempo
spec:
  storage:
    secret:
      name: tempo-s3-storage-secret
      type: s3
  storageSize: 100Gi
  resources:
    total:
      limits:
        memory: 10Gi
        cpu: 6000m
  tenants:
    mode: openshift
    authentication:
      - tenantName: dev
        tenantId: "1610b0c3-c509-4592-a256-a1871353dbfa"
  template:
    gateway:
      enabled: true
    queryFrontend:
      jaegerQuery:
        enabled: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-reader
rules:
  - apiGroups:
      - 'tempo.grafana.com'
    resources:
      - dev
    resourceNames:
      - traces
    verbs:
      - 'get'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tempostack-traces-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-reader
subjects:
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: system:authenticated
---
# grant the default serviceaccount in the tracing-system namespace
# access to view resource in tracing-system namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: view
  namespace: perf-tempo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: default
  namespace: perf-tempo
============================================================================
https://access.redhat.com/solutions/7128188
=================================================================
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: dev
  namespace: tracing-system
spec:
  config: |
    extensions:
      bearertokenauth:
        filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"

    receivers:
      otlp/grpc:
        protocols:
          grpc:
      otlp/http:
        protocols:
          http:

    exporters:
      debug:
        verbosity: detailed
      otlp:
        endpoint: tempo-simplest-gateway.perf-tempo.svc.cluster.local:8090
        tls:
          insecure: false
          ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
        auth:
          authenticator: bearertokenauth
        headers:
          X-Scope-OrgID: "dev"
      otlphttp:
        endpoint: https://tempo-simplest-gateway.perf-tempo.svc.cluster.local:8080/api/traces/v1/dev
        tls:
          insecure: false
          ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
        auth:
          authenticator: bearertokenauth
        headers:
          X-Scope-OrgID: "dev"

    service:
      telemetry:
        logs:
          level: "DEBUG"
          development: true
      extensions: [bearertokenauth]
      pipelines:
        traces/grpc:
          receivers: [otlp/grpc]
          exporters: [otlp, debug]
        traces/http:
          receivers: [otlp/http]
          exporters: [otlphttp, debug]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-write
rules:
  - apiGroups:
      - 'tempo.grafana.com'
    # this needs to match tenant name in the CR/tenants.yaml and the tenant has be sent in X-Scope-OrgID
    # The API gateway sends the tenantname as resource (res) to OPA sidecar
    resources:
      - dev
    resourceNames:
      - traces
    verbs:
      - 'create'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tempostack-traces
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-write
subjects:
  - kind: ServiceAccount
    name: dev-collector
    namespace: tracing-system
========================================================
We need to add this perf-istio

values:
    meshConfig:
      enableTracing: true
      extensionProviders:
        - name: otel
          opentelemetry:
            port: 4317
            service: dev-collector.perf-istio-system.svc.cluster.local
=======================================================================
apiVersion: batch/v1
kind: Job
metadata:
 name: generate-traces-grpc
 namespace: perf-istio-system
spec:
 template:
   spec:
     containers:
     - name: telemetrygen
       image: ghcr.io/open-telemetry/opentelemetry-collector-contrib/telemetrygen:v0.92.0
       args:
       - traces
       - --otlp-endpoint=dev-collector.perf-istio-system.svc:4317
       - --service=grpc
       - --otlp-insecure
       - --traces=10
     restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
 name: generate-traces-http
 namespace: perf-istio-system
spec:
 template:
   spec:
     containers:
       - name: telemetrygen
         image: ghcr.io/open-telemetry/opentelemetry-collector-contrib/telemetrygen:v0.92.0
         args:
           - traces
           - --otlp-endpoint=dev-collector.perf-istio-system.svc:4318
           - --otlp-http
           - --otlp-insecure
           - --service=http
           - --traces=10
     restartPolicy: Never
===================================
apiVersion: telemetry.istio.io/v1
kind: Telemetry
metadata:
  name: otel-demo
  namespace: perf-istio-system
spec:
  tracing:
    - providers:
        - name: otel                  
      randomSamplingPercentage: 100

==============================================================================================
kiali Namespace We need to add
spec:
  deployment:
    cluster_wide_access: true
    instance_name: kiali
    logger:
      log_level: info
    view_only_mode: false
  external_services:
    tracing:
      auth:
        insecure_skip_verify: true
        type: bearer
        use_kiali_token: true
      enabled: true
      in_cluster_url: 'https://simplest-gateway.perf-tempo.svc.cluster.local:8080/api/traces/v1/dev'
      namespace_selector: true
      provider: jaeger
      query_timeout: 30
      url: 'https://tempo-simplest-gateway-perf-tempo.apps.preprod.epay.sbi/api/traces/v1/dev/search'
      use_grpc: false
    grafana:
      enabled: false
    prometheus:
      auth:
        type: bearer
        use_kiali_token: true
      thanos_proxy:
        enabled: true
      url: 'https://thanos-querier.openshift-monitoring.svc.cluster.local:9091'
